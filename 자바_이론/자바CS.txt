ìë° ê³µë¶ì íìí ê²
1. ìì¸ì²ë¦¬ ( try, catch, finally ) 
=> finallyë¥¼ ê¼­ì¨ì¼íëì§ 
=> ìì¸ì²ë¦¬ì ì¢ë¥. 
2. ìì ê´ê³ìì compile ì¤ë¥, runtime ì¤ë¥. 
3. ì¤ë²ë¡ë© ì¤ë²ë¼ì´ë©
Q. ì¤ë²ë¡ë©í  ë ì¤ë¥ë ë­ê° ìì§?? 
ì¤ë²ë¼ì´ë©ì ë¶ëª¨êº¼ ì¬ì ìë¤. ( ë¶ëª¨êº¼ë ì§ì°ê³  ë´êº¼ëë¡ ë¤ìì´ë¤ ) 
4. ì ê·¼ ì§ì ì. 
public , protected, default ( ëì¼í¨í¤ì§ , í´ëì¤ ë´ë¶ ) ,private 
5. ì¶ìí´ëì¤ì ì¸í°íì´ì¤ 
ì¶ì( ë°ëì ì¤ë²ë¼ì´ë©í´ì ì¬ì©í   ë¯¸ìì± ë©ìëê° ì ì´ëíë ì´ì ê°ì§ ë¯¸ìì± í´ëì¤ ) 
ì¦, ìì±ë ë©ìëë ê°ì§ë¤. ë¯¸ìì±ì¸ê±´ abstract void ~ì´ë°ìì¼ë¡ ì. 
ì¸í°íì´ì¤ ( ì¬ê¸´ ì ë¶ë¤ ë¯¸ìì± ëê±° ì, ëª¨ë ì¬ì ì íì ) 
ì¦, ìì± ëê±° ìì¼ë©´ ì¤ë¥ë¨. 
 
ì ìíµ ìë° _ ë¬¸ì  íì´ ì¸ê° ì¢ë¤( ìì í¸ )
https://youtu.be/5ohUT4LEOWI