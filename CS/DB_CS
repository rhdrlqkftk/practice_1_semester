데이터베이스
=> 실시간 접근성, 동시 공용, 내용에 의한 참조(값), 계속 변화. 

정규화 ( 이상을 제거하고 중복을 최소화 하기 위해서 테이블을 분해하는 과정이라고 한다)

1정규형은 도메인 원자값이라는 조건을 충족시키기 위해서
반복을 제거하고 식별자(키)로 구분 가능하도록 테이블을 분해한다.

2정규화는 1정규화를 수행하고 나서 식별자인 기본키가 복합키로 이루어질 수 있는데, 
그 중 하나의 키로 부분적으로 함수 종속이 있을 수 있고, 이때 이상현상이 발생하는 것을 막기 위해서 
완전 함수 종속만 이루어지도록 테이블을 분해하는 것을 말합니다. 

3정규화에서는 기본키에서 발생하는 것이 아닌 그 외의 키가 이행적으로 함수 종속이 일어날 때, 발생하는 것으로 
이를 제거해주는 것을 의미합니다. 

* 트랜잭션이란? 하나의 논리적 기능을 수행하기 위한 작업 단위이다. 

트랜잭션 (4가지)
- Atomicity는 트랜잭션의 연산이 DB에 모두 반영되던지 전혀 반영이되지 않던지 둘중에 하나만 수행해야한다.(원자성) - yes or no // commit, rollback이 일어남

- Consistency는 트랜잭션이 성공적으로 완료된 후에는 언제나 일관성 있는 DB상태로 변환되어야한다.(일관성: 처리 후에 구조나 형식의 변경이 없다.)

- Isolation은 수행중인 트랜잭션이 완전히 완료되기 전에는 다른 트랙잭션에서 수행 결과를 참조할 수 없다.(독립성 : 동시에 작업을 수행하는 경우가 없어야한다. )

- Durablility는 성공적으로 완료된 트랜잭션의 결과는 시스템이 고장나더라도 영구적으로 반영되어야 한다.(영속성)

병행 제어 기법 
로킹: 하나의 트랜잭션이 데이터를 엑세스하는 동안 다른 트랜잭션이 그 데이터 항목을 엑세스 할 수 없도록 잠궈두는 기법이다. 

* 로킹 단위가 작다( 잠궈두는 시간이 작다) -> 일정시간에 여러 애들이 접근이 많아져서 오버헤드 발생가능함, 하지만 병행 수준 높아짐!
로킹 단위가 크면 로크 수가 적어서 관리는 쉽지만, 병행 수준이 낮아짐!

스키마란? DB 구조의 정의, 제약 조건을 명세해놓은 메타데이터의 집합

외부, 개념, 내부 스키마가 있다. 
개념 스키마는  논리적인 관점에서 전체 데이터 구조를 정의 , 외부를 통합한다. 

DDL : Drop , Alter, Creat으로 이루어짐. 
DML : insert, update, delete, select. 
DCL : Grant, Revoke. 

무결성이란 데이터의 정확성, 일관성, 유효성을 유지하는 것을 말한다. 데이터의 무결성을 유지하기 위해 DBMS에서는 크게 4가지 종류로 구분한다.

개체 무결성 : 기본키로 선택된 필드는 빈 값을 허용하지 않는다.
참조 무결성 : 서로 참조 관계에잇는 두 테이블의 데이터는 항상 일관된 값을 유지한다.
도메인 무결성 : 테이블에 존 재하는 필드의 무결성을 보장하기 위한 것으로 올바른 데이터가 입력됬는지를 체크하는 것이다.
고유 무결성 : 특정 속성에 대해 고유한 값을 가지도록 조건이 주어진 경우 그 속성값은 모두 고유한 값을 가진다. 같으면 안된는 것
NULL 무결성 : 특정 속성값에 NULL이 올 수 없다는 조건이 주어진 경우 그 속성값은 NULL이 될 수 없다는 제약조건
키 무결성 : 한 릴레이션에는 최소한 하나의 키가 존재해야하는 제약조건

Q. 무결성을 유지하려는 이유가 무엇인가요?
A. 무결성이 유지가 되어야 DB에 저장된 데이터 값과 거기에 해당하는 현실 세계의 실제값이 일치하는지 신뢰할 수 있기 때문이다.



