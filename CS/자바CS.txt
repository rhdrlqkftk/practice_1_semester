자바 공부시 필요한 것
1. 예외처리 ( try, catch, finally ) 
=> finally 마지막에 무조건 실행. 
=> 예외처리의 종류. 
2. 상속 관계에서 compile 오류, runtime 오류.

3. 오버로딩 오버라이딩
오버로딩 : 같은 이름의 메소드나 생성자를 여러개 가지면서 매개변수의 유형과 갯수를 다르게 한다. 
* 매개변수가 같은데 리턴 타입이 다른 경우는 성립되지 않습니다. 
ex) long garden( int a, int b) , int garden( int a, int b) => 어디로 들어가야할지 모르기에 성립이 안된다. 
오버라이딩: 상위 클래스(부모)가 가지고 있는 메소드를 하위 클래스(자식)가 재정의 하여 사용하는 것을 의미합니다. 

4. 자바에서 equals 와 == 의 차이는? 
equals는 객체(=값)을 비교 , == 는 주소를 비교. 

5. Collection의 종류 ? Set, List, Map 등이 있다. 
모두 인터페이스라 객체로 생성할 순 없고, 각각 특징이 다르다. 
Map은 키와 벨류를 가지는 해쉬 테이블 처럼 사용. 
List는 일반적으로 Linkedlist, arraylist가 있다. 
arraylist : 배열로 되어있기 때문에 추가, 삭제가 많은 경우 Linked 리스트보다 성능이 안좋고 메모리 낭비가 많다. 또 배열을 늘려 주기 위한 연산이 추가로 들어간다. 
Linkedlist : 추가 삭제가 용이함. 검색이나 접근에 있어서는 arraylist가 훨씬 빠르다. 
Set: 중복이 없고 treeSet의 경우에는 정렬까지 가능하다. 


6. C, C++ , Java의 차이는 ? ( 객체 지향과 절차지향의 차이 )
=> 우선 C,C++은 OS가 달라지면 프로그램이 동작하지 않을 수도 있다는 단점이 있고 이를 보완한 JAVA는 OS 위에 JVM이라는 가상머신에서 동작을 하기 때문에, OS에 제약이 없는 것으로 알고 있습니다. 
=> 객체 지향인 C++, JAVA와 절차지향인 C의 차이는 ? 
우선, 절차지향은 이름과 같이 순차적인 처리가 중요시 되며, 컴퓨터의 작업 처리 방식과 유사하게 설계하기 때문에 완성이 되면 매우 빠르다는 특징을 가지고 있습니다. 
하지만, 컴퓨터가 이해하기 쉽게 되어있기에 유지보수의 어려움, 코드의 순서가 바뀌면 동일한 결과가 나오지 않는 어려움, 디버깅의 어려움 등이 있습니다. 
반해, 객체 지향은 조립의 방식으로 만들어져있고 이로 인해 캡슐화(데이터 보존 은닉화를 의미) , 상속(코드의 재활용성), 다형성이라는 특징을 가지고 있습니다.
 
4. 접근 지정자. 
public , protected, default ( 동일패키지 , 클래스 내부 ) ,private 
5. 추상클래스와 인터페이스 
추상( 반드시 오버라이딩해서 사용할  미완성 메소드가 적어도하나 이상 가진 미완성 클래스 ) 
즉, 완성된 메소드도 가진다. 미완성인건 abstract void ~이런식으로 씀. 
인터페이스 ( 여긴 전부다 미완성 된거 씀, 모두 재정의 필요 ) 
즉, 완성 된거 있으면 오류남. 

문제1 ) 추상클래스는 객체 생성 불가능하다. 
=> 미완성된 메소드가 있는데 어떻게 객체를 생성합니까?  그니까 안되지. 

문제2 ) 인터페이스의 특징이 아닌것? 
1. 인터페이스는 계층 관계를 이룰수없다. (X)
계층관계란 상속을 말하고 인터페이스 끼리도 상속이 가능하다. 
2. 인터페이스 내부에는 메소드 구현이 안되어있다(O)
3. 인터페이스 내부에는 인스턴스 변수 선언이 포함될 수 없다. 
4. 인터페이스는 객체를 만들 수 없기 때문에 생성자를 가질 수 없다.(O)




*오버라이딩을 다형성이라고 함. 
오버라이딩 
부모 A, 자식 B라고 할때 
B는 " 오버라이딩 해서 나는 아버지 처럼 살기 싫어 " 해서 자기꺼대로 바꿔 쓴다. 
근데 A ab = New B(); 이렇게 되면, 
부모객체로 만들긴 하지만 껍데기는 B이기 때문에 오버라이딩은 하지만, 
부모가 가진 메소드만 쓸수 있다. 그 외에 꺼는 못씀. 
but) 인생엔 언제나 예외가 있잖아. 
static이 그 예외야. 
A에 static void f가 있고 B에도 f가 있다면, 부모꺼를 써야한다. 
A에 그냥 void f가 있고 B에도 f가 있었다면, 자식f를 써야한다. 



유상통 자바 _ 문제 풀이 인강 좋다( 상속 편 )
https://youtu.be/5ohUT4LEOWI


유상통( 인터페이스 문제 : 8:11)
https://youtu.be/dsF4g0lvXIY




[기타 지식]
자바에서 int value; 라고 되어 있다면,  0으로 초기화되어있는 것이다.
*객체 지향 언어: java, c++, python pascal(다형성 지원 x ), c#, objective-c 
*Python : 높은 효율, 쉬 사용, 확장성 ( 인터프리터 식 대화형 언어 ) 

*Java에는 다중 상속을 지원하지 않는다. 
*연산자 다중 정의도 지원하지 않고 define,  typedef이런거 안쓴다. 
 a >> 2  = a *(1/4) 
 a << 3  = a *(2^3) 

*서버 언어 : ASP, JSP, CGI, PHP 
*클라이언트 언어 : javaScript , VBScript 등이 있음. 


*고급언어의 컴파일 단계 
어휘분석( token 단위로 분리 ) -> 
구문분석(어희의 에러를 찾고 에러가 없는 문장을 구문 구조로 구성) -> 
의미분석(의미오류를 검사) -> 코드 최적화 -> 목적코드 생성 . 


 


